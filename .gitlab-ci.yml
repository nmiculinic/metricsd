stages:
- build
- docker
- deploy

variables:
  GIT_STRATEGY: clone
  GIT_SUBMODULE_STRATEGY: none
  GO111MODULE: "on"

build:
  after_script:
  - du -sh .cache
  artifacts:
    expire_in: 30 days
    paths:
    - metricsd
  services:
  - name: timescale/timescaledb:latest-pg11
    alias: timescaledb
  variables:
    POSTGRES_DB: postgres
    PGDATABASE: postgres

    POSTGRES_USER: postgres
    PGUSER: postgres

    POSTGRES_PASSWORD: "postgres"
    PGPASSWORD: "postgres"

    TEST_DBURL: pg://postgres:postgres@timescaledb/postgres?sslmode=disable
  before_script:
  - apt-get update && apt-get install -y postgresql-client
  - mkdir -p .cache/cache || true
  - mkdir -p .cache/go || true
  - export GOCACHE=$(pwd)/.cache/cache
  - export GOPATH=$(pwd)/.cache/go
  - go env
  - PGHOST=timescaledb psql -f bootstrap.sql
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
    - .cache
  image: golang:1.12
  script:
  - make static-build
  - make test
  stage: build
  tags:
  - docker

build_docker:
  dependencies:
  - build
  image: docker:git
  script:
  - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
  - IMAGE=${CI_REGISTRY}/$CI_PROJECT_PATH:${CI_COMMIT_REF_NAME}  ./.build_docker.sh
  - IMAGE=${CI_REGISTRY}/$CI_PROJECT_PATH:${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA:0:8} ./.build_docker.sh
  services:
  - docker:dind
  stage: docker
  tags:
  - docker

deploy:
  # TODO enable gitlab  integration with k8s
  before_script:
  - mkdir -p ~/.kube || true
  - echo $KUBECONFIG_FILE | base64 -d > ~/.kube/config
  image:
    entrypoint:
    - /bin/ash
    - -c
    name: lachlanevenson/k8s-kubectl:v1.13.2
  only:
  - staging
  script:
  - kubectl --namespace dev set image deployment/metrics metrics=${SHA_IMAGE} --record
  stage: deploy
  tags:
  - docker
  variables:
    GIT_STRATEGY: none
    GIT_SUBMODULE_STRATEGY: none
    SHA_IMAGE: ${CI_REGISTRY}/$CI_PROJECT_PATH:$CI_COMMIT_SHA
  when: manual #  TODO enable always
